---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

interface Props {
    eventPath: string;
}

// Map of country names to their flag emoji for easier lookup
const COUNTRIES = {
    Australia: 'ðŸ‡¦ðŸ‡º',
    Belgium: 'ðŸ‡§ðŸ‡ª',
    Brazil: 'ðŸ‡§ðŸ‡·',
    Canada: 'ðŸ‡¨ðŸ‡¦',
    'Czech Republic': 'ðŸ‡¨ðŸ‡¿',
    Colombia: 'ðŸ‡¨ðŸ‡´',
    Denmark: 'ðŸ‡©ðŸ‡°',
    Ethiopia: 'ðŸ‡ªðŸ‡¹',
    France: 'ðŸ‡«ðŸ‡·',
    Germany: 'ðŸ‡©ðŸ‡ª',
    Ghana: 'ðŸ‡¬ðŸ‡­',
    Greece: 'ðŸ‡¬ðŸ‡·',
    India: 'ðŸ‡®ðŸ‡³',
    Italy: 'ðŸ‡®ðŸ‡¹',
    Netherlands: 'ðŸ‡³ðŸ‡±',
    'New Zealand': 'ðŸ‡³ðŸ‡¿',
    Pakistan: 'ðŸ‡µðŸ‡°',
    Poland: 'ðŸ‡µðŸ‡±',
    'South Africa': 'ðŸ‡¿ðŸ‡¦',
    Spain: 'ðŸ‡ªðŸ‡¸',
    Sweden: 'ðŸ‡¸ðŸ‡ª',
    Switzerland: 'ðŸ‡¨ðŸ‡­',
    Turkey: 'ðŸ‡¹ðŸ‡·',
    'United Kingdom': 'ðŸ‡¬ðŸ‡§',
    USA: 'ðŸ‡ºðŸ‡¸',
} as const;

const { eventPath } = Astro.props;

// Get location pages for the current event
const locationPages = (await getCollection('events'))
    .filter((page) => {
        const pagePath = page.id.split('/');
        return !pagePath[pagePath.length - 1].includes('index.mdx') && pagePath.slice(0, -1).join('/') === eventPath;
    })
    .map((page) => {
        const country = page.data.locations?.[0]?.country;
        return {
            ...page,
            countryInfo: country
                ? {
                      name: country,
                      flag: COUNTRIES[country] || '',
                  }
                : undefined,
        };
    })
    .sort((a, b) => (a.countryInfo?.name ?? '').localeCompare(b.countryInfo?.name ?? ''));
---

<div class="table-responsive">
    <table class="table table-hover table-sm small">
        <thead>
            <tr>
                <th>Country</th>
                <th>City</th>
                <th>Location</th>
                <th>Event page</th>
            </tr>
        </thead>
        <tbody>
            {
                locationPages.map((page) => (
                    <tr class="position-relative">
                        <td class="text-nowrap">
                            {page.countryInfo?.flag} {page.countryInfo?.name}
                        </td>
                        <td class="text-nowrap">{page.data.locations?.[0]?.city}</td>
                        <td>{page.data.locations?.[0]?.name}</td>
                        <td class="text-nowrap">
                            <a class="stretched-link" href={`/events/${page.id.replace('.mdx', '')}`}>
                                Read more
                            </a>
                        </td>
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
