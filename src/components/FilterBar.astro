---
// TODO: Should we use nanostores
import { CurrentFilter, SortBy, DisplayStyle } from './filter.js';
import { useStore } from '@nanostores/react';

import { Icon } from 'astro-icon';
import Button from 'react-bootstrap/Button';
import ButtonGroup from 'react-bootstrap/ButtonGroup';
import Form from 'react-bootstrap/Form';
import ToggleButton from 'react-bootstrap/ToggleButton';

export interface Props {
    num_released: number;
    num_dev: number;
    num_archived: number;
    sorted_by: string;
    display_as: string;
}

const { num_released, num_dev, num_archived, sorted_by, display_as } = Astro.props;

const filters = [
    { name: 'Released', count: num_released, active: true },
    { name: 'Under development', count: num_dev, active: true },
    { name: 'Archived', count: num_archived, active: true },
];
const sorts = [
    {
        name: 'Last release',
        active: sorted_by === 'last_release',
    },
    {
        name: 'Alphabetical',
        active: sorted_by === 'alphabetical',
    },
    {
        name: 'Stars',
        active: sorted_by === 'stars',
    },
];
---

<div class="d-md-none dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        Filter & Sort
    </button>
    <div class="dropdown-menu">
        <Form.Control className="searchbox" type="text" placeholder="Search keywords" />
        <div class="me-2">
            Filter:
            <ButtonGroup className="ms-1">
                {
                    filters.map((filter) => (
                        <Button variant="outline-success" className={filter.active ? 'active' : ''}>
                            {filter.name} <span class="badge bg-secondary">{filter.count}</span>
                        </Button>
                    ))
                }
            </ButtonGroup>
        </div>
        <div class="me-2">
            Sort:
            <ButtonGroup className="ms-1">
                {
                    sorts.map((sort) => (
                        <ToggleButton
                            variant="outline-success"
                            type="radio"
                            name="radio"
                            value={sort.name}
                            checked={sort.active}
                        >
                            {sort.name}
                        </ToggleButton>
                    ))
                }
            </ButtonGroup>
        </div>
        <div class="me-2">
            Display:
            <ButtonGroup className="ms-1">
                <ToggleButton
                    variant="outline-success active"
                    type="radio"
                    name="radio"
                    value="cards"
                    checked={DisplayStyle === 'cards'}
                >
                    <Icon name="clarity:view-cards-line" size="1.5rem" />
                </ToggleButton>

                <ToggleButton
                    variant="outline-success active"
                    type="radio"
                    name="radio"
                    value="cards"
                    checked={DisplayStyle === 'cards'}
                    data-bs-toggle="tooltip"
                    data-bs-title="Display as table"
                >
                    <i class="fas fa-bars"></i>
                </ToggleButton>
            </ButtonGroup>
        </div>
    </div>
</div>

<div class="d-none d-md-flex sticky-top justify-content-start">
    <Form.Control className="searchbox" type="text" placeholder="Search keywords" />
    <div class="d-flex align-items-center ms-3">
        Filter:
        <ButtonGroup className="ms-1">
            {
                filters.map((filter) => (
                    <Button variant="outline-success" className={filter.active ? 'active' : ''}>
                        {filter.name} <span class="badge bg-secondary">{filter.count}</span>
                    </Button>
                ))
            }
        </ButtonGroup>
    </div>
    <div class="d-flex align-items-center ms-3">
        Sort:
        <ButtonGroup className="ms-1">
            {
                sorts.map((sort) => (
                    <ToggleButton
                        variant="outline-success"
                        type="radio"
                        name="radio"
                        value={sort.name}
                        checked={sort.active}
                    >
                        {sort.name}
                    </ToggleButton>
                ))
            }
        </ButtonGroup>
    </div>
    <div class="d-flex align-items-center ms-3">
        Display:
        <ButtonGroup className="ms-1">
            <Button variant="outline-success active" data-bs-toggle="tooltip" data-bs-title="Display as cards"
                ><Icon name="clarity:view-cards-line" size="1.5rem" />
            </Button>
            <Button variant="outline-success" data-bs-toggle="tooltip" data-bs-title="Display as table"
                ><i class="fas fa-bars"></i>
            </Button>
        </ButtonGroup>
    </div>
</div>
<style>
    input.searchbox {
        max-width: 15rem;
        margin-right: 1rem;
    }
</style>
