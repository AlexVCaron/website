---
// Heavily inspired by Astro Starlight

import { type SidebarEntry } from '@utils/types';
import { sanitizeNfCoreLabels } from '@utils/functions';

export interface Props {
    items: SidebarEntry[];
    nested?: boolean;
}

let { items, nested = false } = Astro.props;
if (!items) {
    items = [];
}

const flattenSidebar = (sidebar: SidebarEntry[]): SidebarEntry[] => {
    if (!sidebar) {
        return [];
    }
    return sidebar.flatMap((entry) =>
        entry.type === 'group' && entry.entries ? flattenSidebar(entry.entries) : entry,
    );
};
---

<script is:inline>
    // scroll to the active item
    if (typeof window !== 'undefined') {
        const activeItem = document.querySelector('a[aria-current="page"]');
        if (activeItem) {
            activeItem.scrollIntoView({ block: 'center' });
        }
    }
</script>
<ul class:list={[{ 'top-level': !nested }]}>
    {
        items.map((item) => {
            const containsCurrent =
                item.type === 'group' &&
                (flattenSidebar(item.entries).some((i) => i.isCurrent) || item.entries.some((i) => i.isCurrent));
            return (
                <li>
                    {item.type === 'link' ? (
                        <a
                            href={item.href}
                            aria-current={item.isCurrent && 'page'}
                            class:list={['px-2']}
                            data-weight={item.weight}
                        >
                            <span set:html={sanitizeNfCoreLabels(item.label)} />
                        </a>
                    ) : (
                        <details open={containsCurrent || item.isCurrent || !item.collapsed}>
                            <summary
                                aria-current={item.isCurrent && 'page'}
                                class:list={[{ 'border-success': containsCurrent }]}
                            >
                                <div class:list={[{ h5: !nested }, 'group-label flex-grow-1']}>
                                    {item.href ? (
                                        <a
                                            href={item.href}
                                            class="fw-semibold d-block"
                                            data-weight={item.weight}
                                            set:html={sanitizeNfCoreLabels(item.label)}
                                        />
                                    ) : (
                                        <span
                                            class="fw-semibold"
                                            data-weight={item.weight}
                                            set:html={sanitizeNfCoreLabels(item.label)}
                                        />
                                    )}
                                </div>
                                <div class="hover-target">
                                    <i
                                        class:list={[
                                            'fa-solid fa-chevron-right fa-xs mx-3 h-100 caret',
                                            { 'text-success': containsCurrent },
                                        ]}
                                    />
                                </div>
                            </summary>
                            <Astro.self items={item.entries} nested={true} />
                        </details>
                    )}
                </li>
            );
        })
    }
</ul>
<style lang="scss">
    @import '@styles/_variables.scss';

    ul {
        --sl-sidebar-item-padding-inline: 0.5rem;
        list-style: none;
        padding: 0;
    }
    li {
        overflow-wrap: anywhere;
        font-size: 1rem;
        a:not(.fw-semibold) {
            display: block;
            text-decoration: none;
            color: var(--bs-body-color);
            padding: 0.3em var(--sl-sidebar-item-padding-inline);
            border-inline-end: 2pt solid var(--bs-border-color);
            line-height: 1.4;
        }
        a {
            &:hover {
                background-color: transparentize($success, 0.85);
            }
        }
        & summary[aria-current='page'] .group-label a:hover {
            background-color: transparentize($success, 1);
        }
        a,
        summary {
            &[aria-current='page'],
            &[aria-current='page']:hover,
            &[aria-current='page']:focus {
                color: var(--bs-body-color);
                background-color: transparentize($success, 0.75);
                border-inline-end: 2pt solid var(--bs-success);
            }
        }
    }

    ul ul li {
        margin-inline-start: calc(var(--sl-sidebar-item-padding-inline));
        border-inline-start: 1pt solid var(--bs-border-color);
        padding-inline-start: var(--sl-sidebar-item-padding-inline);
    }

    .top-level summary .h5 {
        padding-top: 0.15rem;
        padding-bottom: 0.15rem;
    }

    summary {
        display: flex;
        align-items: center;
        justify-content: space-between;
        cursor: pointer;
        user-select: none;
        border-inline-end: 2pt solid var(--bs-border-color);
        a,
        span {
            text-decoration: none;
            padding: 0.3em var(--sl-sidebar-item-padding-inline);
            margin-bottom: 0;
            color: var(--bs-body-color);
            font-family: $font-family-sans-serif;
        }
    }
    summary::marker,
    summary::-webkit-details-marker {
        display: none;
    }

    .caret {
    }
    .hover-target {
        flex-shrink: 0;
        &:hover {
            color: var(--bs-success);
        }
    }
    [open] > summary .caret {
        transform: rotateZ(90deg);
    }

    a > *:not(:last-child),
    .group-label > *:not(:last-child) {
        margin-inline-end: 0.25em;
    }
</style>
