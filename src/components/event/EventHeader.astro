---
import ExportEventButton from '@components/event/ExportEventButton.svelte';
import LocalDateTime from '@components/event/LocalDateTime.svelte';

const { frontmatter } = Astro.props;

if (frontmatter.start === undefined) {
    frontmatter.start = new Date(frontmatter.startDate + 'T' + frontmatter.startTime);
}
if (frontmatter.end === undefined) {
    frontmatter.end = new Date(frontmatter.endDate + 'T' + frontmatter.endTime);
}
const start = frontmatter.start;
const end = frontmatter.end;
const locations = frontmatter.locations || [];
---

<div class="">
    <div class="row row-cols-1 row-cols-md-2">
        <div class="col">
            <dl>
                <dt>Event start:</dt>
                <dd><LocalDateTime date={start} client:visible /></dd>
                <dt>Event end:</dt>
                <dd><LocalDateTime date={end} client:visible /></dd>
            </dl>
        </div>
        <div class="col">
            {
                locations.map((location) => {
                    return (
                        <dl>
                            {location.locationURL && (
                                <>
                                    <dt>{location.locationURL.length === 1 ? 'Link' : 'Links'}:</dt>
                                    <dd>
                                        <ul class="list-unstyled">
                                            {location.locationURL.map((loc) => {
                                                return (
                                                    <li class="list-item">
                                                        <a class="text-white underline" href={loc}>
                                                            // TODO: Add logic to display icon depending on URL
                                                            {loc}
                                                        </a>
                                                    </li>
                                                );
                                            })}
                                        </ul>
                                    </dd>
                                </>
                            )}
                            {location.locationName && (
                                <>
                                    <dt>Location:</dt>
                                    <dd>{location.locationName}</dd>
                                </>
                            )}
                            {location.address && (
                                <>
                                    <dt>Address:</dt>
                                    <dd>{location.address}</dd>
                                </>
                            )}
                            {location.locationLatLng && (
                                <>
                                    <dd>
                                        <a
                                            class="mt-2 btn btn-sm btn-outline-light"
                                            href={`https://www.openstreetmap.org/?mlat=${location.locationLatLng[0]}&mlon=${location.locationLatLng[1]}&zoom=16#map=16/${location.locationLatLng[0]}/${location.locationLatLng[1]}`}
                                            target="_blank"
                                        >
                                            <i class="fa-duotone fa-map-pin me-1" />
                                            See on map
                                        </a>
                                    </dd>
                                </>
                            )}
                        </dl>
                    );
                })
            }
        </div>
    </div>

    <div class="d-flex justify-content-center justify-content-md-start">
        <ExportEventButton frontmatter={frontmatter} add_class="btn-outline-light col" client:idle />
    </div>
</div>
<style lang="scss">
    .dropdown-menu {
        z-index: 100;
    }
</style>
