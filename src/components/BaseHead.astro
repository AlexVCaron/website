---
export interface Props {
    title: string;
    description: string;
    image?: string;
}

const { title, description, image = '/social_img.png' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="color-scheme" content="light dark" />
<meta name="theme-color" content="#1d9655" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="alternate" type="application/rss+xml" title="nf-core: Events" href="/events/rss" />
<meta name="generator" content={Astro.generator} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- FontAwesome -->
<script src="https://kit.fontawesome.com/38356a05cc.js" crossorigin="anonymous"></script>

<!-- Theme -->
<script is:inline>
    const root = document.documentElement;
    const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark';
        }
        return 'light';
    })();

    const switchTheme = (e) => {
        const target = e.target;
        let theme = '';
        // check if we clicked on svg or if target doesn't have a title attribute
        if (target.tagName !== 'div' || !target.title) {
            // get the parent div
            theme = target.closest('div.theme-option').title;
        } else {
            theme = e.target.title;
        }
        localStorage.setItem('theme', theme);
        setTheme(theme);
        window.dispatchEvent(new Event('theme-changed'));
    };
    const setTheme = function (theme) {
        if (theme === 'auto') {
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                root.setAttribute('data-bs-theme', 'dark');
            } else {
                root.setAttribute('data-bs-theme', 'light');
            }
        } else {
            root.setAttribute('data-bs-theme', theme);
        }
    };
    setTheme(theme);
</script>
<!-- Google Analytics -->
<script type="text/partytown" src="https://www.googletagmanager.com/gtag/js?id=G-1J32LEB1KZ"></script>
<script type="text/partytown">
    window.dataLayer = window.dataLayer || [];
    function gtag() {
        dataLayer.push(arguments);
    }
    gtag('js', new Date());
    gtag('config', 'G-1J32LEB1KZ');
</script>
