---
import pipelines_json from '@public/pipelines.json';

export const prerender = false;

const { pipeline, version, path } = Astro.params;

const meta = pipelines_json.remote_workflows.find((wf) => wf.name === pipeline);
if (meta) {
    // check if version starts with usage, output, or docs
    // if so, redirect to the versioned docs
    if (version?.startsWith('usage') || version?.startsWith('output') || version?.startsWith('docs')) {
        console.log('redirecting ', version, ' to ', meta.default_version);
        return Astro.redirect(`/${pipeline}/${meta.releases[0].tag_name}/${version}`);
    }
    const release = meta.releases.find((r) => r.tag_name === version);
    if (release) {
        if (path?.startsWith('usage') || path?.startsWith('output')) {
            console.log('redirecting ', path, ' to ', version);
            return Astro.redirect(`/${pipeline}/${version}/docs/${path}`);
        } else if (path?.startsWith('docs')) {
            console.log('redirecting ', path, ' to ', version);
            return Astro.redirect(`/${pipeline}/${version}/${path}`);
        } else if (path === undefined || path === '') {
            console.log('redirecting ', path, ' to ', version);
            return Astro.redirect(`/${pipeline}/${version}/`);
        }
    }
}
---
