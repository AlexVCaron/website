---
import pipelines_json from '@public/pipelines.json';

export function getStaticPaths() {
    var paths: { params: { pipeline: string; version: string; md_file: string }; props: { versions; md_files } }[] = [];
    pipelines_json.remote_workflows.forEach((pipeline) => {
        pipeline.releases.forEach((release) => {
            const md_files = release.doc_files.map((file) => file.replace('docs/', '').replace('.md', ''));
            paths.push({
                params: {
                    pipeline: pipeline.name,
                    version: release.tag_name,
                },
                props: {
                    meta: pipeline,
                },
            });
        });
    });
    return paths;
}

const { pipeline, version } = Astro.params;
const { meta } = Astro.props;
const releaseSHA = meta.releases.find((release) => release.tag_name === version)?.sha;

if (meta) {
    const prefix = `${pipeline}/results-${releaseSHA}/`;
    const baseURL = `/${pipeline}/${version}/`;
    console.log('redirect', baseURL + 'results/' + prefix);
    return Astro.redirect(baseURL + 'results/' + prefix);
}
---
