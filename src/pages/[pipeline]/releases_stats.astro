---
import InstallCmd from '@components/InstallCmd.svelte';
import SidebarStatsRow from '@components/sidebar/SidebarStatsRow.astro';
import PipelinePageLayout from '@layouts/PipelinePageLayout.astro';
import pipelines_json from '@public/pipelines.json';
import { formatDistance } from 'date-fns';
import octokit from '@components/octokit';
import { markdown } from '@astropub/md';

export function getStaticPaths() {
    var paths: {
        params: {
            pipeline: string;
        };
        props: {
            releases: any;
            md_files: string[];
            meta: any;
        };
    }[] = [];
    pipelines_json.remote_workflows.forEach((pipeline) => {
        const md_files = pipeline.releases[0].doc_files.map((file) => file.replace('docs/', '').replace('.md', ''));
        const releases = pipeline.releases.filter((release) => release.tag_name !== 'dev');
        if (releases.length === 0) {
            return;
        }
        paths.push({
            params: {
                pipeline: pipeline.name,
            },
            props: {
                releases: releases,
                md_files: md_files,
                meta: pipeline,
            },
        });
    });
    return paths;
}
const { pipeline } = Astro.params;

let { releases, md_files, meta } = Astro.props;
const version = releases[0].tag_name;
const description = meta.description;
const gh_releases = await octokit.request('GET /repos/nf-core/{repo}/releases', {
    repo: pipeline,
});
---

<PipelinePageLayout
    pipeline={pipeline}
    subtitle={description}
    headings={[]}
    version={version}
    versions={releases.map((release) => release.tag_name)}
    tabItems={md_files}
>
    <div class="row">
        <div class="col-12 col-md-9 pt-3">
            <h1>Version history</h1>
            <div class="accordion" id="releases">
                {
                    gh_releases &&
                        releases &&
                        releases.map((release, i) => {
                            return (
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button
                                            class="accordion-button"
                                            type="button"
                                            data-bs-toggle="collapse"
                                            data-bs-target={`#collapse${release.tag_name.replaceAll('.', '_')}`}
                                            aria-expanded="true"
                                            aria-controls="collapseOne"
                                        >
                                            {release.tag_name}
                                            <span class="text-body-secondary ms-auto small">
                                                {formatDistance(new Date(release.published_at), new Date(), {
                                                    addSuffix: true,
                                                })}
                                            </span>
                                        </button>
                                    </h2>
                                    <div
                                        id={`collapse${release.tag_name.replaceAll('.', '_')}`}
                                        class:list={[
                                            'accordion-collapse collapse',
                                            release.tag_name === version ? 'show' : '',
                                        ]}
                                    >
                                        <div class="accordion-body">
                                            <div class="btn-group float-end" role="group" aria-label="Basic example">
                                                <a
                                                    href={`https://api.github.com/repos/nf-core/${pipeline}/zipball/${release.tag_name}`}
                                                    class="btn btn-sm btn-outline-secondary"
                                                >
                                                    Download .zip
                                                </a>

                                                <a
                                                    href={`https://api.github.com/repos/nf-core/${pipeline}/tarball/${release.tag_name}`}
                                                    class="btn btn-sm btn-outline-secondary"
                                                >
                                                    Download .tar.gz
                                                </a>
                                                <a
                                                    href={`https://github.com/nf-core/${pipeline}/releases/tag/${release.tag_name}`}
                                                    class="btn btn-sm btn-outline-secondary"
                                                >
                                                    <i class="fa-brands fa-github me-2" />
                                                    View on GitHub
                                                </a>
                                            </div>
                                            {gh_releases.data[i].body
                                                ? async () => {
                                                      const html = await markdown(gh_releases.data[i].body);
                                                      return html;
                                                  }
                                                : ''}
                                        </div>
                                    </div>
                                </div>
                            );
                        })
                }
            </div>
        </div>
        <div class="col-12 col-md-3 toc order-first order-md-last">
            <div class="sidebar">
                <SidebarStatsRow content={[{ title: 'run with', icon: 'fa-regular fa-terminal' }]}>
                    <ul class="nav nav-fill small" role="tablist">
                        <li class="nav-item border-0" role="presentation">
                            <a
                                class="nav-link active"
                                id="nf-core-tab"
                                data-bs-toggle="tab"
                                data-bs-target="#nf-core-tab-pane"
                                type="button"
                                role="tab"
                                aria-controls="nf-core-tab-pane"
                                aria-selected="true">nf-core</a
                            >
                        </li>
                        <li class="nav-item" role="presentation">
                            <a
                                class="nav-link"
                                id="nextflow-tab"
                                data-bs-toggle="tab"
                                data-bs-target="#nextflow-tab-pane"
                                type="button"
                                role="tab"
                                aria-controls="nextflow-tab-pane"
                                aria-selected="false">Nextflow</a
                            >
                        </li>
                        <li class="nav-item" role="presentation">
                            <a
                                class="nav-link"
                                id="tower-tab"
                                data-bs-toggle="tab"
                                data-bs-target="#tower-tab-pane"
                                type="button"
                                role="tab"
                                aria-controls="tower-tab-pane"
                                aria-selected="false">Tower</a
                            >
                        </li>
                    </ul>
                    <div class="tab-content py-2 px-1">
                        <div
                            class="tab-pane show active"
                            id="nf-core-tab-pane"
                            role="tabpanel"
                            aria-labelledby="nf-core-tab"
                            tabindex="0"
                        >
                            <InstallCmd
                                client:idle
                                icon={false}
                                cmd={`nf-core launch nf-core/${pipeline} -r ${version}`}
                            />
                        </div>
                        <div
                            class="tab-pane"
                            id="nextflow-tab-pane"
                            role="tabpanel"
                            aria-labelledby="nextflow-tab"
                            tabindex="0"
                        >
                            <InstallCmd
                                client:visible
                                icon={false}
                                cmd={`nextflow run nf-core/${pipeline} -r ${version} -profile test --outdir <OUTDIR>`}
                            />
                        </div>
                        <div
                            class="tab-pane"
                            id="tower-tab-pane"
                            role="tabpanel"
                            aria-labelledby="tower-tab"
                            tabindex="0"
                        >
                            <InstallCmd
                                client:visible
                                icon={false}
                                cmd={`tw launch https://nf-co.re/${pipeline} -r ${version}`}
                            />
                            <span class="text-body-secondary small"
                                >See the <a
                                    href="https://github.com/seqeralabs/tower-cli/#2-configuration"
                                    target="_blank">docs</a
                                > on how to configure the Tower CLI.</span
                            >
                        </div>
                    </div>
                </SidebarStatsRow>
                <SidebarStatsRow
                    content={[
                        { title: 'subscribers', value: meta.subscribers_count },
                        { title: 'stars', value: meta.stargazers_count },
                    ]}
                />
                <SidebarStatsRow
                    content={[
                        { title: 'open issues', value: meta.open_issues_count },
                        { title: 'open PRs', value: meta.open_pr_count },
                    ]}
                />
                <SidebarStatsRow
                    content={[
                        {
                            title: 'last release',
                            value: formatDistance(new Date(meta.releases[0].published_at), new Date(), {
                                addSuffix: true,
                            }),
                        },
                        {
                            title: 'last update',
                            value: formatDistance(new Date(meta.updated_at), new Date(), { addSuffix: true }),
                        },
                    ]}
                />
                <SidebarStatsRow content={[{ title: 'contributors' }]}>
                    {
                        meta.contributors.map((contributor) => {
                            return (
                                <img
                                    src={'https://github.com/' + contributor.name + '.png?size=50'}
                                    alt={contributor.name}
                                    class="me-2 mb-2"
                                    width="50"
                                    height="50"
                                    data-bs-toggle="tooltip"
                                    title={
                                        contributor.name +
                                        '\n (' +
                                        contributor.count +
                                        (contributor.count > 1 ? ' contributions)' : ' contribution)')
                                    }
                                />
                            );
                        })
                    }
                </SidebarStatsRow>
            </div>
        </div>
    </div>
</PipelinePageLayout>

<style lang="scss">
    @import '@styles/_variables.scss';
    .nav-link {
        &:hover {
            border: 0;
            border-bottom: 2px solid $success;
        }
        &:focus {
            border: 0;
            border-bottom: 2px solid $success;
        }
    }

    .nav-link.active {
        border: 0;
        border-bottom: 2px solid $success;
    }
</style>
