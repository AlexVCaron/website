---
import { markdown } from '@astropub/md';
import PipelineSidebar from '@components/pipeline/PipelineSidebar.astro';
import PipelinePageLayout from '@layouts/PipelinePageLayout.astro';
import pipelines_json from '@public/pipelines.json';
import octokit, { getGitHubFile } from '@components/octokit.js';

const { pipeline } = Astro.params;

// check if pipeline and version is in pipelines_json
const meta = pipelines_json.remote_workflows.find(
    (wf) => wf.name === pipeline && wf.releases.flatMap((r) => r.tag_name).includes('dev')
);

if (!meta) return Astro.redirect('/404');
const md_content = await getGitHubFile(pipeline, 'README.md', 'dev');

const version = 'dev';
const description = meta.description;
const headings = [];
const versions = meta.releases.map((r) => r.tag_name);
const baseUrl = '/' + pipeline + '/dev';
let doc_files = await octokit.rest.repos
    .getContent({
        owner: 'nf-core',
        repo: pipeline,
        path: 'docs',
        ref: 'dev',
    })
    .then((response) => {
        return response.data
            .filter((file) => {
                return file.name.includes('.md') && !file.name.includes('README');
            })
            .map((file) => {
                return file.path.replace('docs/', '').replace('.md', '');
            });
    });

let tabItems = doc_files.map((file) => {
    return {
        label: file.replace(/-/g, ' ').replace(/\w\S*/g, (txt) => {
            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
        }),
        href: baseUrl + '/' + file,
        active: false,
    };
});

export const prerender = false;
---

<PipelinePageLayout
    pipeline={pipeline}
    subtitle={description}
    headings={headings}
    version={version}
    versions={versions}
    tabItems={tabItems}
>
    <div class="row">
        <div class="col-12 col-md-9 pt-3">
            {
                async () => {
                    const html = await markdown(md_content); // Markdown component of md package is broken at the moment, using this workaround
                    return html;
                }
            }
        </div>
        <div class="col-12 col-md-3 toc order-first order-md-last">
            <PipelineSidebar {meta} {pipeline} {version} />
        </div>
    </div>
</PipelinePageLayout>

<style lang="scss"></style>
