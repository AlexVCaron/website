---
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';
import BaseLayout from '@layouts/BaseLayout.astro';
import Header from '@components/header/Header.astro';

let {
    title = SITE_TITLE,
    meta_title = title,
    subtitle = SITE_DESCRIPTION,
    image,
    header_html,
    event_header,
    md_github_url,
    header_btn_url,
    header_btn_text,
    mainpage_container,
    subfooter = false,
    frontmatter,
    navTocHeadings = [],
    topics = [],
    sections = [],
    docSearchTags = [],
    mermaid = false,
} = Astro.props;

export interface Props {
    title?: string;
    meta_title?: string;
    subtitle?: string;
    image?: string;
    header_html?: string;
    event_header?: object[];
    md_github_url?: string;
    header_btn_url?: string;
    header_btn_text?: string;
    mainpage_container?: boolean;
    navTocHeadings?: object[];
    subfooter?: boolean;
    frontmatter?: any;
    topics?: string[];
    sections?: { section_name: string; children: {}[] }[] | never[];
    docSearchTags?: {
        name: string;
        content: string | string[];
    }[];
    mermaid?: boolean;
}

if (frontmatter) {
    title = frontmatter.title || title;
    subtitle = frontmatter.subtitle || subtitle;
    image = frontmatter.image || image;
    header_html = frontmatter.header_html || header_html;
    md_github_url = frontmatter.md_github_url || md_github_url;
    header_btn_url = frontmatter.header_btn_url || header_btn_url;
    header_btn_text = frontmatter.header_btn_text || header_btn_text;
    mainpage_container = frontmatter.mainpage_container || mainpage_container;
    subfooter = frontmatter.subfooter || subfooter;
}
---

<BaseLayout
    title={meta_title}
    subtitle={subtitle}
    image={image}
    md_github_url={md_github_url}
    subfooter={subfooter}
    navTocHeadings={navTocHeadings}
    sections={sections}
    docSearchTags={docSearchTags}
>
    <div class="mainpage">
        <Header
            title={title}
            subtitle={subtitle}
            header_html={header_html}
            event_header={event_header}
            md_github_url={md_github_url}
            header_btn_url={header_btn_url}
            header_btn_text={header_btn_text}
            topics={topics}
        >
            <slot name="sub-header" />
        </Header>
        {
            mainpage_container || mainpage_container == null ? (
                <div class="container main-content pt-md-4 DocSearch-content">
                    <slot />
                </div>
            ) : (
                <div class="DocSearch-content">
                    <slot />
                </div>
            )
        }
    </div>
    <slot name="pre-footer" />
    { mermaid && (
    <script>
        // taken from https://github.com/JuanM04/portfolio/blob/983b0ed0eabdac37bf8b7912d3e8128a443192b9/src/pages/docs/%5B...documentSlug%5D.astro#L74-L103
        async function renderDiagrams(graphs) {
            const { default: mermaid } = await import('mermaid');
            mermaid.initialize({
                startOnLoad: false,
                fontFamily: 'var(--sans-font)',
                // @ts-ignore This works, but TS expects a enum for some reason
                theme: window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default',
            });

            for (const graph of graphs) {
                const content = graph.getAttribute('data-content');
                if (!content) continue;
                let svg = document.createElement('svg');
                const id = (svg.id = 'mermaid-' + Math.round(Math.random() * 100000));
                graph.appendChild(svg);
                mermaid.render(id, content).then((result) => {
                    graph.innerHTML = result.svg;
                });
            }
        }
        setTimeout(() => {
            const graphs = document.getElementsByClassName('mermaid');
            if (document.getElementsByClassName('mermaid').length > 0) {
                renderDiagrams(graphs);
            }
        }, 300);
    </script>
    )}
</BaseLayout>

<style lang="scss">
    .mainpage {
        min-height: calc(100vh - 14.5rem); // offset for header and footer
    }
</style>
