---
import PageLayout from './PageLayout.astro';
import MarkdownWrapper from '@components/MarkdownWrapper.svelte';
import SidebarLeft from '@components/SidebarLeft.astro';
import SidebarToc from '@components/SidebarToc.svelte';
import FooterPrevNext from '@components/FooterPrevNext.astro';
import { getCollection } from 'astro:content';

export interface Props {
    title: string;
    subtitle: string;
    md_github_url: string;
    headings: { text: string; slug: string; depth: number; fa_icon?: string }[];
    event_header?: object[];
    left_sidebar?: boolean;
}

const { title, subtitle, md_github_url, event_header, headings, left_sidebar } = Astro.props;

let docs = await getCollection('docs');
//exclude nested pages
docs = docs.filter((doc) => {
    return doc.slug.split('/').length === 2;
});

// get the previous and next page based on the current page
const current_page = docs.find((page) => page.slug === Astro.url.pathname.replace('/docs/', ''));
// find the index of the current page and use that to get the previous and next page
const current_page_index = docs.findIndex((page) => page.slug === Astro.url.pathname.replace('/docs/', ''));
let prev_page = docs[current_page_index - 1];
prev_page = prev_page && prev_page.slug?.split('/')[0] === Astro.url.pathname.split('/')[2] ? prev_page : '';
let next_page = docs[current_page_index + 1];
next_page = next_page && next_page.slug?.split('/')[0] === Astro.url.pathname.split('/')[2] ? next_page : '';
---

<PageLayout
    title={title}
    subtitle={subtitle}
    md_github_url={md_github_url}
    event_header={event_header}
    subfooter={false}
    mainpage_container={true}
    navTocHeadings={headings}
>
    <div class="row">
        {
            left_sidebar && (
                <div class="col-12 col-md-2 sticky-top d-none d-md-inline sidebar-left sticky-top-under">
                    <SidebarLeft />
                </div>
            )
        }
        <div class:list={['col-12', { 'col-md-10': !left_sidebar, 'col-md-8': left_sidebar }]}>
            <div class="markdown-content">
                <MarkdownWrapper headings={headings} client:idle>
                    <slot />
                </MarkdownWrapper>
            </div>
        </div>
        <div class="col-12 col-md-2 toc">
            <SidebarToc headings={headings} client:idle />
        </div>
    </div>
    <FooterPrevNext slot="pre-footer" md_github_url={md_github_url} prev_page={prev_page} next_page={next_page} />
</PageLayout>
<style lang="scss">
    .toc {
        padding-top: 3.5rem;
        margin-top: -4rem; // compensate for the navbar-offset of the underlying .nav element
    }
    .sidebar-left {
        max-height: calc(100vh - 4rem);
        overflow-y: auto;
    }
    .sticky-top-under {
        top: 4rem;
        position: sticky;
    }
</style>
